dist: trusty
sudo: required
language: cpp
cache: ccache
services:
  - docker
install:
  - cd ..
  - git clone https://github.com/intel/gmmlib.git gmmlib
  - git clone https://github.com/intel/libva.git libva
  - cd ./media-driver

script:
  - rm -rf ${TRAVIS_BUILD_DIR}/../build && mkdir ${TRAVIS_BUILD_DIR}/../build
  - mkdir -p $HOME/.ccache
  - ccache -s
  - ccache -z
  - >
      docker run
      -v $HOME/.ccache:/opt/ccache
      -v ${TRAVIS_BUILD_DIR}/../:/opt/src
      -w /opt/src/libva
      -e CCACHE_DIR=/opt/ccache
      intelmediadriver/media-driver-docker
      ./autogen.sh --prefix=/usr --libdir=/usr/lib/x86_64-linux-gnu
  - >
      docker run
      -v $HOME/.ccache:/opt/ccache
      -v ${TRAVIS_BUILD_DIR}/../:/opt/src
      -w /opt/src/libva
      -e CCACHE_DIR=/opt/ccache
      intelmediadriver/media-driver-docker
      make -j8
  - >
      docker run
      -v $HOME/.ccache:/opt/ccache
      -v ${TRAVIS_BUILD_DIR}/../:/opt/src
      -w /opt/src/libva
      -e CCACHE_DIR=/opt/ccache
      intelmediadriver/media-driver-docker
      make install DESTDIR=/opt/src/libva-install
  - ccache -s
  - ccache -z
  - >
      docker run
      -v $HOME/.ccache:/opt/ccache
      -v ${TRAVIS_BUILD_DIR}/../:/opt/src
      -w /opt/src/build
      -e CCACHE_DIR=/opt/ccache
      intelmediadriver/media-driver-docker
      cmake ../media-driver
      -DCMAKE_INSTALL_PREFIX=/usr
      -DLIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri
      -DLIBVA_INSTALL_PATH=/opt/src/libva-install/usr/include
      -DBUILD_TYPE=Release
  - >
      docker run
      -v $HOME/.ccache:/opt/ccache
      -v ${TRAVIS_BUILD_DIR}/..:/opt/src
      -w /opt/src/build
      -e CCACHE_DIR=/opt/ccache
      intelmediadriver/media-driver-docker
      make -j8
  - ccache -s
  - ccache -z
  - sudo rm -rf ${TRAVIS_BUILD_DIR}/../build && mkdir ${TRAVIS_BUILD_DIR}/../build
  - >
      docker run
      -v $HOME/.ccache:/opt/ccache
      -v ${TRAVIS_BUILD_DIR}/../:/opt/src
      -w /opt/src/build
      -e CCACHE_DIR=/opt/ccache
      intelmediadriver/media-driver-docker
      cmake ../media-driver
      -DCMAKE_INSTALL_PREFIX=/usr
      -DLIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri
      -DLIBVA_INSTALL_PATH=/opt/src/libva-install/usr/include
      -DENABLE_KERNELS=OFF
      -DBUILD_TYPE=Release
  - >
      docker run
      -v $HOME/.ccache:/opt/ccache
      -v ${TRAVIS_BUILD_DIR}/..:/opt/src
      -w /opt/src/build
      -e CCACHE_DIR=/opt/ccache
      intelmediadriver/media-driver-docker
      make -j8
  - ccache -s
  - ccache -z
  - sudo rm -rf ${TRAVIS_BUILD_DIR}/../build && mkdir ${TRAVIS_BUILD_DIR}/../build
  - >
      docker run
      -v $HOME/.ccache:/opt/ccache
      -v ${TRAVIS_BUILD_DIR}/../:/opt/src
      -w /opt/src/build
      -e CCACHE_DIR=/opt/ccache
      intelmediadriver/media-driver-docker
      cmake ../media-driver
      -DCMAKE_INSTALL_PREFIX=/usr
      -DLIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri
      -DLIBVA_INSTALL_PATH=/opt/src/libva-install/usr/include
      -DENABLE_NONFREE_KERNELS=OFF
      -DBUILD_TYPE=Release
  - >
      docker run
      -v $HOME/.ccache:/opt/ccache
      -v ${TRAVIS_BUILD_DIR}/..:/opt/src
      -w /opt/src/build
      -e CCACHE_DIR=/opt/ccache
      intelmediadriver/media-driver-docker
      make -j8
  - ccache -s
  - ccache -z

jobs:
  include:
    - os: linux
    - os: freebsd
      compiler: clang
      before_install:
        - sudo pkg install -y meson pkgconf libdrm libXext libXfixes wayland
        - sudo pkg install -y -x '^mesa($|-libs)'
      install:
        - sudo ln -sf /usr/local/libdata/pkgconfig /usr/local/lib/
        - git clone https://github.com/intel/gmmlib.git
        - (cd gmmlib && cmake -B _build -G Ninja && cmake --build _build && sudo cmake --install _build)
        - git clone https://github.com/intel/libva.git
        - (cd libva && meson _build && meson compile -C _build && sudo meson install -C _build)
      script:
        - ccache -s
        - ccache -z
        - cmake -B _build -G Ninja
            -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
            -DBUILD_TYPE=Release -DBUILD_CMRTLIB=OFF -DMEDIA_RUN_TEST_SUITE=OFF
        - cmake --build _build
        - ccache -s
        - ccache -z
